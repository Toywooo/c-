#include<iostream>
using namespace std;
class Base1
{
public:
	int m_a;
protected:
	int m_b;
private:
	int m_c;
};
class son1:public Base1
{
public:
	void fun1()
	{
		m_a=10;
		m_b=20;
		//m_c=30;//父类私有成员在子类中仍为私有成员，子类不可访问
	}
};
class Base2
{
public:
	int m_a;
protected:
	int m_b;
private:
	int m_c;
};
class son2:protected Base2
{
public:
	void fun1()
	{
		m_a=10;
		m_b=20;
		//m_c=30;//父类私有成员在子类中仍为私有成员，子类不可访问
	}
};
class Base3
{
public:
	int m_a;
protected:
	int m_b;
private:
	int m_c;
};
class son3:private Base3
{
public:
	void fun1()
	{
		m_a=10;
		m_b=20;
		//m_c=30;//父类私有成员在子类中仍为私有成员，子类不可访问
	}
};
void test01()
{
	son1 s1;
	s1.m_a=10;
	//s1.m_b=10;//不可访问，子类公共继承父类的属性后，保护成员属性不变，类外不可访问
	son2 s2;
	//s2.m_a=10;
	//s2.m_b=10;
	//s2.m_c=10;//不可访问，因为子类保护继承父类的项之后，父类的所有项都变成保护属性，类外不可访问
	son3 s3;
	//s3.m_a=10;
	//s3.m_b=10;
	//s3.m_c=10;不可访问，因为子类私有继承父类的项之后，父类的所有项都变成私有属性，类外不可访问
}
int main()
{
	system("pause");
	return 0;
}
