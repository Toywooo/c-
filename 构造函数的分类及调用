#include<iostream>
using namespace std;
#include<string>

//按参数分为：有参构造和无参构造
//按类型分为：普通构造和拷贝构造
class person
{
	//1.构造函数
public:
	int age;
	person()//无参构造
	{
		cout<<"无参构造函数的调用"<<endl;
	}
	person(int a)//有参构造
	{
		age=a;
		cout<<"有参构造函数的调用"<<endl;
	}
	person(const person &p)//拷贝构造
	{
		age=p.age;//将传入的人身上的所有属性拷贝 
		cout<<"拷贝构造函数的调用"<<endl;
	}
};

//调用
void test1()
{
	//1.括号法
	person p1;//注意事项：使用默认构造函数时，不要加（），如person p1（）是错的
	          //编译器会认为这是一个函数的声明，不会认为在创建对象
	person p2(10);
	person p3(p2);
	cout<<"p2的年龄为:"<<p2.age<<endl;
	cout<<"p3的年龄为:"<<p3.age<<endl;
	//2.显示法
	person p4;
	person p5=person(10);
	person p6=person(p5);
	person(10);//匿名对象，特点：当前执行结束后，系统会立即回收掉匿名对象
	//注意事项：不要利用拷贝构造函数初始化匿名对象，如person（p3）;编译器会认为person(p3)等价于person p3;对象的声明，重定义

	//3.隐式转换法
	person p7=10;//相当于person p4=person(10); 有参构造
	person p8=p7;//拷贝构造
}
int main()
{
	test1();
	system("pause");
	return 0;
} 
