#include<iostream>
using namespace std;
#include<cmath>

class Point
{
public:
	Point(int xx=0,int yy=0)
	{
		x=xx;
		y=yy;
		cout<<"Point的构造函数调用"<<endl;
	}
	Point(Point &p);
	int getx()
	{
		return x;
	}
	int gety()
	{
		return y;
	}
private:
	int x;
	int y;
};
Point::Point (Point &p)
{
	x=p.x;
	y=p.y;
	cout<<"Point 的复制构造函数调用"<<endl;
}

class Line
{
public:
	Line(Point xp1,Point xp2);
	Line(Line &l);
	double getlen()
	{
		return len;
	}
private:
	Point p1,p2;
	double len;	
};
Line::Line(Point xp1,Point xp2):p1(xp1),p2(xp2)
{
	cout<<"Line的构造函数调用"<<endl;
	double x=static_cast<double>(p1.getx()-p2.getx());
	double y=static_cast<double>(p1.gety()-p2.gety());
	len=sqrt(x*x+y*y);
}
Line::Line (Line &l):p1(l.p1),p2(l.p2)
{
	cout<<"Line的复制构造函数调用"<<endl;
	len=l.len;
}

int main()
{
	Point myp1(1,1),myp2(4,5);
	Line line(myp1,myp2);
	Line line2(line);
	cout<<"线的长度是："<<line.getlen()<<endl;
	cout<<"线2的长度是："<<line2.getlen()<<endl;
	system("pause");
	return 0;
}
