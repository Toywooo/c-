#include<iostream>
using namespace std;
class person
{
public:
	int m_a;
	int m_b;

	//1.成员函数
	/*person personaddperson(person &p)
	{
		person temp;
		temp.m_a=this->m_a+p.m_a;
		temp.m_b=this->m_b+p.m_b;
		return temp;
	}*/ 

	//2.成员函数重载
	/*person operator+(person &p)
	{
		person temp;
		temp.m_a=this->m_a+p.m_a;
		temp.m_b=this->m_b+p.m_b;
		return temp;
	}*/
};

//3.全局函数实现加号重载
person operator+(person &p1,person &p2)
{
	person temp;
	temp.m_a=p1.m_a+p2.m_a;
	temp.m_b=p1.m_b+p2.m_b;
	return temp;
}

//4.加号重载也能实现函数重载
person operator+(person &p1,int t)
{
	person temp;
	temp.m_a=p1.m_a+t;
	temp.m_b=p1.m_b+t;
	return temp;
}

void test01()
{
	person p1;
	p1.m_a=10;
	p1.m_b=20;
	person p2;
	p2.m_a=30;
	p2.m_b=40;

	//person p3=p1.personaddperson(p2);

	//person p3=p1.operator+(p2);
	//person p3=p1+p2;

	//person p3=operator+(p1,p2);
	person p3=p1+p2;

	person p4=p1+10;//person+int

	cout<<"p3.m_a="<<p3.m_a<<endl;
	cout<<"p3.m_b="<<p3.m_b<<endl;
	cout<<"p4.m_a="<<p4.m_a<<endl;
	cout<<"p4.m_b="<<p4.m_b<<endl;
}
int main()
{
	test01();
	system("pause");
	return 0;
}
